Legend:     [x] Finished task   [-] Partially complete task   [ ] Unstarted task
             -  Information      o  Option

[ ] Self hosting
    [ ] Discrepancies between GCC and FCC:
        - struct and union decl syntax & semantics
        - Module system
        - Sequence points? No, seems to be the same
    [ ] ABI
[ ] Command line options
    [ ] Control pretty printing
[ ] Modules
    - http://llvm.org/devmtg/2012-11/Gregor-Modules.pdf
[-] Type system
    - By val -> By ref (grr)
    - Wrap types in modifiers: ptr, array, fn
    - Match-all class for error handling
    [ ] Unique ptrs?
    [ ] Lvalues
    [ ] Narrowing/widening (careful with function rets)
[ ] Error handling
    [ ] Skipping
[ ] Operator table
[-] struct
    [ ] Literals
[-] enum
	[ ] Cray-cray anonymous struct in anonymous enum in struct things
[-] Block scope
[-] Casts
    - (type) value
    - Differentiate between this and (value) by symbol lookup
[-] Operators
    [x] Pointers
    [ ] Boolean
    [ ] Bitwise
    [ ] Shifts
    [ ] Modulo
    [ ] Division
    [x] Ternary if
    [ ] Comma
[ ] const
[ ] string
[x] bool
[ ] Prototypes
    [ ] Structs
    [ ] Functions
[ ] Function pointers?
[x] do while
[ ] Varargs
[ ] static
    [ ] Variables
    [ ] Functions
[ ] extern
[ ] Global variables
[ ] CRT support
[ ] sizeof
[ ] break
[ ] main
    [ ] Args
    [ ] Conformance

[-] Global state -> state structs
    [ ] Operands: reg, labels
    [x] Symbols
[-] If an operand is not literally the result, recreate it
    fo safety n shizzle
[ ] Emitter helper functions
[ ] Normalize ptr decl binding
[-] astCreateBOP(op, left, right)
[-] Decode AST nodes like in emitterLoop and emitterFor
[-] Assertions
[ ] Clean up value moving code
[-] Const correctness
[-] Make sure prototypes and implementation match exactly (static)
[ ] Use a cond field of ??? AST ???
[ ] Do analyzerArrayLiteral lits properly
[ ] File names in error messages
[ ] Fix type compatibility
    - Type coercion needed (remember: bool -> int)
[ ] Fix bop location thingy (astCreateBOP(o, l))
[ ] Fix lvalue error messages
[ ] Check constness of array sizes, enum values etc
[x] Move type assignment stuff to analyzer? Could solve some of the above
[ ] Filext
[ ] class -> tag
[ ] Array size detection (basic x[] = {...})

[ ] Abysmal error recovery
[-] AST is not abstract
[ ] AST field reuse is weird and unclear
[x] Parser/semantics merged => overly complex
    - When in doubt, reject *semantically*
      This means the parser fucks up less.
[ ] Dealing with operands in the emitter is cumbersome
[ ] Arch specifics are a bit magic value-y
[x] Type system overly simple
[-] Lack of comments, esp. interface documentation
[ ] Assumption of operand class permutations required
[ ] Unit tests?
