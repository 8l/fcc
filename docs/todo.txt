Legend:     [x] Finished task   [-] Partially complete task   [ ] Unstarted task
             -  Information      o  Option

[ ] Self hosting
    [ ] Discrepancies between GCC and FCC:
        - Ptr decl binding: non issue
        - struct and union decl syntax & semantics
        - Module system
        - Sequence points
    [ ] ABI
[ ] Command line options
[ ] Modules
    - http://llvm.org/devmtg/2012-11/Gregor-Modules.pdf
[-] struct
    [ ] Literals
[-] enum
[ ] Block scope
[ ] Casts
    - (type) value
    - Differentiate between this and (value) by symbol lookup
[-] Operators
    [x] Pointers
    [ ] Boolean
    [ ] Bitwise
    [ ] Shifts
    [ ] Modulo
    [ ] Division
    [x] Ternary if
    [ ] Comma
[ ] const
[ ] string
[x] bool
[ ] Prototypes
    [ ] Structs
    [ ] Functions
[ ] Function pointers?
[x] do while
[ ] Varargs
[ ] static
    [ ] Variables
    [ ] Functions
[ ] extern
[ ] Global variables
[ ] CRT support
[ ] sizeof
[ ] break
[ ] main
    [ ] Args
    [ ] Conformance
[x] Type checker

[ ] Skip line on error
[-] Global state -> state structs
    [ ] Operands: reg, labels
    [ ] Symbols
[-] If an operand is not literally the result, recreate it
    fo safety n shizzle
[ ] Emitter helper functions
[ ] Normalize ptr decl binding
[-] astCreateBOP(op, left, right)
[ ] Pretty printing
    [-] ASM output
        [x] Indenting
        [-] Comments
    [-] Debug output
    [ ] Command line arg controlled
[ ] Decode AST nodes like in emitterLoop and emitterFor
[-] Assertions
[-] Internal error reporting standardisation
[ ] Clean up value moving code
[-] Const correctness
[x] Use debugEnter and Leave more
[-] Make sure prototypes and implementation match exactly (static)
[ ] Use a cond field of AST
[ ] Introduce a match-all type class for error handling
[ ] Do analyzerArrayLiteral lits properly
[ ] File names in error messages
[ ] Use bitfields for type properties?
[ ] Fix type compatibility
    - Type coercion needed
[ ] Fix bop location thingy (astCreateBOP(o, l))
[ ] Fix lvalue error messages
[ ] Check constness of array sizes, enum values etc
[ ] Deconfuse array representations
[ ] Move type assignment stuff to analyzer? Could solve some of the above
[ ] Filext

[ ] Abysmal error recovery
[ ] AST is not abstract
[ ] AST field reuse is weird and unclear
[x] Parser/semantics merged => overly complex
    - When in doubt, reject *semantically*
      This means the parser fucks up less.
[ ] Dealing with operands in the emitter is cumbersome
[ ] Arch specifics are a bit magic value-y
[-] Type system overly simple
[-] Lack of comments, esp. interface documentation
[ ] Assumption of operand class permutations required
